import React, { useState } from 'react';
import { Avatar, Button, Card, Flex, Heading, Separator, Text, TextField } from "@radix-ui/themes";
import { EnvelopeClosedIcon, LockClosedIcon, PersonIcon } from "@radix-ui/react-icons";
import { Link, useForm } from "@inertiajs/react";

export default function Register() {
    const { data, setData, post, processing, errors } = useForm({
        name: '',
        email: '',
        password: '',
        password_confirmation: ''
    });

    const handleSubmit = (e) => {
        e.preventDefault();
        post('/register');
    };

    return (
        <>
            <Flex justify="center" align="center" style={{ height: "100vh", backgroundColor: "#121212" }}>
                <Card style={{ width: 350, padding: "24px", textAlign: "center" }}>
                    <Heading size="5">üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</Heading>
                    <Text size="3" color="gray">
                        –°–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å
                    </Text>

                    <Separator my="3" />

                    {/* –§–æ—Ä–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ */}
                    <form onSubmit={handleSubmit}>
                        <Flex direction="column" gap="3">
                            {/* –ò–º—è */}
                            <TextField.Root
                                placeholder="–ò–º—è"
                                type="text"
                                value={data.name}
                                onChange={(e) => setData('name', e.target.value)}
                            >
                                <TextField.Slot>
                                    <PersonIcon />
                                </TextField.Slot>
                            </TextField.Root>
                            {errors.name && <Text size="2" color="red">{errors.name}</Text>}

                            {/* E-mail */}
                            <TextField.Root
                                placeholder="E-mail"
                                type="email"
                                value={data.email}
                                onChange={(e) => setData('email', e.target.value)}
                            >
                                <TextField.Slot>
                                    <EnvelopeClosedIcon />
                                </TextField.Slot>
                            </TextField.Root>
                            {errors.email && <Text size="2" color="red">{errors.email}</Text>}

                            {/* –ü–∞—Ä–æ–ª—å */}
                            <TextField.Root
                                placeholder="–ü–∞—Ä–æ–ª—å"
                                type="password"
                                value={data.password}
                                onChange={(e) => setData('password', e.target.value)}
                            >
                                <TextField.Slot>
                                    <LockClosedIcon />
                                </TextField.Slot>
                            </TextField.Root>
                            {errors.password && <Text size="2" color="red">{errors.password}</Text>}

                            <TextField.Root
                                placeholder="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
                                type="password"
                                value={data.password_confirmation}
                                onChange={(e) => setData('password_confirmation', e.target.value)}
                            >
                                <TextField.Slot>
                                    <LockClosedIcon />
                                </TextField.Slot>
                            </TextField.Root>

                            <Button type="submit" variant="solid" disabled={processing}>
                                {processing ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è'}
                            </Button>
                        </Flex>
                    </form>

                    <Separator my="3" />

                    <Text size="2" color="gray">
                        –£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç? <Link href="#">–í–æ–π—Ç–∏</Link>
                    </Text>
                </Card>
            </Flex>
        </>
    );
}
